
Input: root = [3,9,20,null,null,15,7]
Output: [[3],[9,20],[15,7]]


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>>res;
        if(root==NULL) return res;
        vector<int> v;
        queue<TreeNode*> q;
        q.push(root);
        q.push(NULL);
        while(!q.empty())
        {
            TreeNode* temp=q.front();
            if(temp!=NULL)
            {
                q.pop();
                v.push_back(temp->val);
                if(temp->left) q.push(temp->left);
                if(temp->right) q.push(temp->right);
            }
            else   //means if temp is null
            {
              q.pop();
                 res.push_back(v);
                 v.clear();
                 if(!q.empty()){
                     q.push(NULL);   
            }
//             if(temp==NULL){
//                  q.pop();
//                 res.push_back(v);
//                 v.clear();
//                 if(!q.empty()){
//                     q.push(NULL);
//                 }
//             } 
//            else{
//             q.pop();
//                v.push_back(temp->val);
//                if(temp->left) q.push(temp->left);
//             if(temp->right) q.push(temp->right);
               
//             }
        }
        }
        return res;
        
    }
};
